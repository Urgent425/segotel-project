# app/controllers/integration_controller.py
from flask import jsonify, request
from app.api.models.integration import Integration, IntegrationEvent
from app.api import db

# Add or update a third-party integration
def add_integration():
    data = request.get_json()
    service_name = data.get('service_name')
    api_key = data.get('api_key')

    # Check if the integration already exists
    integration = Integration.query.filter_by(service_name=service_name).first()
    if integration:
        integration.api_key = api_key
    else:
        integration = Integration(service_name=service_name, api_key=api_key)
        db.session.add(integration)

    db.session.commit()
    return jsonify({'message': 'Integration added/updated successfully'})

# Get list of active integrations
def get_integrations():
    integrations = Integration.query.filter_by(status='active').all()
    return jsonify([integration.to_dict() for integration in integrations])

# Log integration events (e.g., API call or error)
def log_integration_event(integration_id, event_type, details):
    event = IntegrationEvent(
        integration_id=integration_id,
        event_type=event_type,
        details=details
    )
    db.session.add(event)
    db.session.commit()

# Example: Call external API and log the result
def call_third_party_service(service_name):
    integration = Integration.query.filter_by(service_name=service_name, status='active').first()
    if not integration:
        return jsonify({'error': 'Integration not found'}), 404

    # Assuming we are calling a third-party API here
    try:
        response = some_external_api_call(integration.api_key) # type: ignore
        log_integration_event(integration.id, 'api_call', str(response))
        return jsonify({'message': 'API call successful', 'data': response})
    except Exception as e:
        log_integration_event(integration.id, 'error', str(e))
        return jsonify({'error': 'API call failed', 'details': str(e)}), 500
