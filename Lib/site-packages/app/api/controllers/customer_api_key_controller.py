# app/controllers/customer_api_key_controller.py
from flask import jsonify, request
from app.api.models.customer_api_key import CustomerAPIKey
from app.api import db

# Generate a new API key for a customer
def generate_customer_api_key(customer_id):
    api_key = CustomerAPIKey(customer_id=customer_id)
    api_key.generate_key()
    return jsonify({'api_key': api_key.api_key}), 200

# Validate the customer API key
def validate_customer_api_key(api_key):
    key = CustomerAPIKey.query.filter_by(api_key=api_key, is_active=True).first()
    if key:
        return True
    return False

# Example of a protected endpoint that requires API key validation
def protected_customer_endpoint():
    api_key = request.headers.get('X-API-KEY')
    if not validate_customer_api_key(api_key):
        return jsonify({'error': 'Invalid API key'}), 401
    
    return jsonify({'message': 'Access granted'}), 200
