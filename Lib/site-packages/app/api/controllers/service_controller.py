# app/controllers/service_controller.py
from flask import request, jsonify
from app.api.models.service import Service
from app.api import db

# Create a new service
def create_service():
    data = request.get_json()
    if not data or not data.get('name') or not data.get('price') or not data.get('description'):
        return jsonify({"error": "Missing required data"}), 400

    new_service = Service(name=data['name'], description=data['description'], price=data['price'])
    db.session.add(new_service)
    db.session.commit()

    return jsonify(new_service.to_dict()), 201

# Get all services
def get_all_services():
    services = Service.query.all()
    return jsonify([service.to_dict() for service in services]), 200

# Get a service by ID
def get_service_by_id(service_id):
    service = Service.query.get(service_id)
    if service is None:
        return jsonify({"error": "Service not found"}), 404
    return jsonify(service.to_dict()), 200

# Update a service
def update_service(service_id):
    service = Service.query.get(service_id)
    if service is None:
        return jsonify({"error": "Service not found"}), 404

    data = request.get_json()
    service.name = data.get('name', service.name)
    service.description = data.get('description', service.description)
    service.price = data.get('price', service.price)
    service.status = data.get('status', service.status)

    db.session.commit()
    return jsonify(service.to_dict()), 200

# Delete a service
def delete_service(service_id):
    service = Service.query.get(service_id)
    if service is None:
        return jsonify({"error": "Service not found"}), 404

    db.session.delete(service)
    db.session.commit()
    return '', 204
