# app/controllers/invoice_controller.py
from flask import request, jsonify
from app.api.models.invoice import Invoice
from app.api.models.customer import Customer
from app.api.models.service import Service
from app.api import db

# Create a new invoice
def create_invoice():
    data = request.get_json()

    customer_id = data.get('customer_id')
    service_id = data.get('service_id')
    amount = data.get('amount')

    if not customer_id or not service_id or not amount:
        return jsonify({"error": "Missing required data"}), 400

    customer = Customer.query.get(customer_id)
    service = Service.query.get(service_id)

    if not customer:
        return jsonify({"error": "Customer not found"}), 404
    if not service:
        return jsonify({"error": "Service not found"}), 404

    new_invoice = Invoice(customer_id=customer_id, service_id=service_id, amount=amount)
    db.session.add(new_invoice)
    db.session.commit()

    return jsonify(new_invoice.to_dict()), 201

# Get all invoices
def get_all_invoices():
    invoices = Invoice.query.all()
    return jsonify([invoice.to_dict() for invoice in invoices]), 200

# Get an invoice by ID
def get_invoice_by_id(invoice_id):
    invoice = Invoice.query.get(invoice_id)
    if invoice is None:
        return jsonify({"error": "Invoice not found"}), 404
    return jsonify(invoice.to_dict()), 200

# Update an invoice
def update_invoice(invoice_id):
    invoice = Invoice.query.get(invoice_id)
    if invoice is None:
        return jsonify({"error": "Invoice not found"}), 404

    data = request.get_json()
    invoice.amount = data.get('amount', invoice.amount)
    invoice.status = data.get('status', invoice.status)
    invoice.payment_date = data.get('payment_date', invoice.payment_date)

    db.session.commit()
    return jsonify(invoice.to_dict()), 200

# Delete an invoice
def delete_invoice(invoice_id):
    invoice = Invoice.query.get(invoice_id)
    if invoice is None:
        return jsonify({"error": "Invoice not found"}), 404

    db.session.delete(invoice)
    db.session.commit()
    return '', 204
