# app/controllers/analytics_controller.py
from app.api import db
from flask import jsonify
from app.api.models.service_usage import ServiceUsage
from app.api.models.customer_activity import CustomerActivity
from sqlalchemy import func

# Get total service usage
def get_service_usage():
    usage_data = db.session.query(
        ServiceUsage.service_id,
        func.count(ServiceUsage.id).label('total_usage'),
        func.sum(ServiceUsage.duration).label('total_duration')
    ).group_by(ServiceUsage.service_id).all()

    return jsonify([{
        'service_id': data.service_id,
        'total_usage': data.total_usage,
        'total_duration': data.total_duration
    } for data in usage_data])

# Get customer behavior
def get_customer_activity():
    activity_data = db.session.query(
        CustomerActivity.customer_id,
        CustomerActivity.activity_type,
        func.count(CustomerActivity.id).label('activity_count')
    ).group_by(CustomerActivity.customer_id, CustomerActivity.activity_type).all()

    return jsonify([{
        'customer_id': data.customer_id,
        'activity_type': data.activity_type,
        'activity_count': data.activity_count
    } for data in activity_data])

# Get operational metrics (like total requests or errors)
def get_operational_metrics():
    # Example: Assuming there is a table to log API requests/errors, this can be extended
    return jsonify({
        'api_requests': 12000,
        'errors': 35,
        'average_response_time': 0.12  # in seconds
    })
