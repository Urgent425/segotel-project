# app/controllers/employee_controller.py
from flask import request, jsonify
from app.api.models.employee import Employee
from app.api import db

# Create a new employee
def create_employee():
    data = request.get_json()
    if not data or not data.get('name') or not data.get('email') or not data.get('role'):
        return jsonify({"error": "Missing required data"}), 400
    
    new_employee = Employee(name=data['name'], email=data['email'], role=data['role'])
    db.session.add(new_employee)
    db.session.commit()
    
    return jsonify(new_employee.to_dict()), 201

# Get all employees
def get_all_employees():
    employees = Employee.query.all()
    return jsonify([employee.to_dict() for employee in employees]), 200

# Get employee by ID
def get_employee_by_id(employee_id):
    employee = Employee.query.get(employee_id)
    if employee is None:
        return jsonify({"error": "Employee not found"}), 404
    return jsonify(employee.to_dict()), 200

# Update employee details
def update_employee(employee_id):
    employee = Employee.query.get(employee_id)
    if employee is None:
        return jsonify({"error": "Employee not found"}), 404
    
    data = request.get_json()
    employee.name = data.get('name', employee.name)
    employee.email = data.get('email', employee.email)
    employee.role = data.get('role', employee.role)
    employee.status = data.get('status', employee.status)
    
    db.session.commit()
    return jsonify(employee.to_dict()), 200

# Delete an employee
def delete_employee(employee_id):
    employee = Employee.query.get(employee_id)
    if employee is None:
        return jsonify({"error": "Employee not found"}), 404
    
    db.session.delete(employee)
    db.session.commit()
    return '', 204