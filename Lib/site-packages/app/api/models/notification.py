# app/models/notification.py
from app.api import db

class Notification(db.Model):
    __tablename__ = 'notifications'
    
    id = db.Column(db.Integer, primary_key=True)
    recipient = db.Column(db.String(255), nullable=False)  # Email, phone number, etc.
    message = db.Column(db.String(500), nullable=False)
    notification_type = db.Column(db.String(50), nullable=False)  # Email, SMS, Push
    status = db.Column(db.String(50), nullable=False, default='pending')  # Pending, Sent, Failed
    scheduled_at = db.Column(db.DateTime)  # Optional for scheduling notifications
    sent_at = db.Column(db.DateTime)  # Timestamp of when the notification was sent

    def to_dict(self):
        return {
            'id': self.id,
            'recipient': self.recipient,
            'message': self.message,
            'notification_type': self.notification_type,
            'status': self.status,
            'scheduled_at': self.scheduled_at,
            'sent_at': self.sent_at
        }
    
    def __repr__(self):
        return f'<Notification {self.sent_at} - {self.status}>'