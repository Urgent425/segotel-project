# app/models/invoice.py
from app.api import db
from datetime import datetime

class Invoice(db.Model):
    __tablename__ = 'invoices'
    
    id = db.Column(db.Integer, primary_key=True)
    customer_id = db.Column(db.Integer, db.ForeignKey('customers.id'), nullable=False)
    service_id = db.Column(db.Integer, db.ForeignKey('services.id'), nullable=False)
    amount = db.Column(db.Float, nullable=False)
    status = db.Column(db.String(20), default="unpaid")  # Could be 'paid', 'unpaid', 'overdue'
    payment_date = db.Column(db.DateTime, nullable=True)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)

    customer = db.relationship('Customer', backref=db.backref('invoices', lazy=True))
    service = db.relationship('Service', backref=db.backref('invoices', lazy=True))

    def to_dict(self):
        return {
            'id': self.id,
            'customer_id': self.customer_id,
            'service_id': self.service_id,
            'amount': self.amount,
            'status': self.status,
            'payment_date': self.payment_date,
            'created_at': self.created_at
        }

    def __repr__(self):
        return f'<Invoice {self.id} - {self.status}>'
