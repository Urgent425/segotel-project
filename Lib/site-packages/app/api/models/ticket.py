# app/models/ticket.py
from app.api import db
from datetime import datetime

class Ticket(db.Model):
    __tablename__ = 'tickets'
    
    id = db.Column(db.Integer, primary_key=True)
    customer_id = db.Column(db.Integer, db.ForeignKey('customers.id'), nullable=False)
    employee_id = db.Column(db.Integer, db.ForeignKey('employees.id'), nullable=True)  # Employee assignment
    title = db.Column(db.String(100), nullable=False)
    description = db.Column(db.Text, nullable=False)
    status = db.Column(db.String(20), default="open")  # 'open', 'closed', 'in progress', etc.
    priority = db.Column(db.String(10), default="medium")  # 'low', 'medium', 'high'
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, onupdate=datetime.utcnow)

    # Relationships
    customer = db.relationship('Customer', backref=db.backref('tickets', lazy=True))
    employee = db.relationship('Employee', backref=db.backref('tickets', lazy=True))  # Relationship with Employee

    def to_dict(self):
        return {
            'id': self.id,
            'customer_id': self.customer_id,
            'employee_id': self.employee_id,  # New field for assigned employee
            'title': self.title,
            'description': self.description,
            'status': self.status,
            'priority': self.priority,
            'created_at': self.created_at,
            'updated_at': self.updated_at
        }

    def __repr__(self):
        return f'<Ticket {self.id} - {self.status}>'