# app/__init__.py
from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_migrate import Migrate
from flask_jwt_extended import JWTManager
from flask_bcrypt import Bcrypt

db = SQLAlchemy()
migrate = Migrate()
bcrypt = Bcrypt()

def create_api_app():
    api_app = Flask(__name__)
    api_app.config['JWT_SECRET_KEY'] = 'your_jwt_secret_key'  # Set a secure secret key using Jason Web Token(JWT)

    jwt = JWTManager(api_app)

    # Load configuration
    api_app.config.from_object('config.Config')

    # Initialize database and migration
    db.init_app(api_app)
    migrate.init_app(api_app, db)
    bcrypt.init_app(api_app)

    # Import models to register them with SQLAlchemy
    from app.api.models.customer import Customer
    from app.api.models.ticket import Ticket
    from app.api.models.employee import Employee
    from app.api.models.service import Service
    from app.api.models.invoice import Invoice
    from app.api.models.notification import Notification
    from app.api.models.service_usage import ServiceUsage
    from app.api.models.customer_activity import CustomerActivity
    from app.api.models.integration import Integration

    # Register blueprints (routes)
    from app.api.routes.customer_routes import customer_bp
    api_app.register_blueprint(customer_bp, url_prefix='/api/v1/customers')
    from app.api.routes.employee_routes import employee_bp 
    api_app.register_blueprint(employee_bp, url_prefix='/api/v1/employees')
    from app.api.routes.ticket_routes import ticket_bp
    api_app.register_blueprint(ticket_bp, url_prefix='/api/v1/tickets')
    from app.api.routes.invoice_routes import invoice_bp 
    api_app.register_blueprint(invoice_bp, url_prefix='/api/v1/invoices')
    from app.api.routes.service_routes import service_bp 
    api_app.register_blueprint(service_bp, url_prefix='/api/v1/services')
    from app.api.routes.notification_routes import notification_bp
    api_app.register_blueprint(notification_bp, url_prefix='/api/v1/notifications')
    from app.api.routes.analytics_routes import analytics_bp
    api_app.register_blueprint(analytics_bp, url_prefix='/api/v1/analytics')
    from app.api.routes.integration_routes import integration_bp
    #app.register_blueprint(integration_bp, url_prefix='api/v1/integrations/register')
    api_app.register_blueprint(integration_bp, url_prefix='/api/v1/integrations')



    return api_app