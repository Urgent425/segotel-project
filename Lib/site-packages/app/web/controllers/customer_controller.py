import requests
from flask import render_template, request, redirect, url_for, flash, session, Blueprint


API_URL = 'http://127.0.0.1:5000/api/v1/customers'  # Example API URL

customer_bp = Blueprint('customer', __name__)
# Registration page
@customer_bp.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        # Collect form data
        name = request.form['name']
        email = request.form['email']
        password = request.form['password']

        # Send API request to register customer
        response = requests.post(f"{API_URL}/register", json={
            'name': name,
            'email': email,
            'password': password
        })

        if response.status_code == 201:
            flash('Customer registered successfully. API Key: ' + response.json().get('api_key'))
            return redirect(url_for('customer.login'))
        else:
            flash('Registration failed. Try again.')
    
    return render_template('register.html')

# Login page
@customer_bp.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']

        # Send API request to log in
        response = requests.post(f"{API_URL}/login", json={
            'email': email,
            'password': password
        })

        if response.status_code == 200:
            access_token = response.json().get('access_token')
            session['access_token'] = access_token
            flash('Logged in successfully.')
            return redirect(url_for('customer.profile'))
        else:
            flash('Login failed. Check your credentials.')
    
    return render_template('login.html')

# Profile page (view profile and API keys)
@customer_bp.route('/profile', methods=['GET'])
def profile():
    # Get the current customer's profile using the stored JWT token
    token = session.get('access_token')
    headers = {'Authorization': f'Bearer {token}'}
    profile_response = requests.get(f"{API_URL}/profile", headers=headers)

    if profile_response.status_code == 200:
        customer_data = profile_response.json()
        return render_template('profile.html', customer=customer_data)
    
    flash('Failed to retrieve profile.')
    return redirect(url_for('customer.login'))

# Generate API key
@customer_bp.route('/api-keys/generate', methods=['GET', 'POST'])
def generate_api_key():
    token = session.get('access_token')
    headers = {'Authorization': f'Bearer {token}'}

    # Generate new API key request
    response = requests.post(f"{API_URL}/generate-api-key", headers=headers)

    if response.status_code == 200:
        flash('New API key generated: ' + response.json().get('api_key'))
    else:
        flash('Failed to generate new API key.')

    return redirect(url_for('customer.profile'))
